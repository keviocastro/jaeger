
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-service-1
  namespace: jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger-service-1
  template:
    metadata:
      labels:
        app: jaeger-service-1
    spec:
      containers:
      - name: jaeger-service-1
        image: keviocastro/jaeger-service-1
        ports:
        - containerPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-service-2
  namespace: jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger-service-2
  template:
    metadata:
      labels:
        app: jaeger-service-2
    spec:
      containers:
      - name: jaeger-service-2
        image: keviocastro/jaeger-service-2
        ports:
        - containerPort: 3002
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-service-1
  namespace: jaeger
spec:
  selector:
    app: jaeger-service-1
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3001
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-service-2
  namespace: jaeger
spec:
  selector:
    app: jaeger-service-2
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3002
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-service-1-ingress
  namespace: jaeger
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  ingressClassName: nginx
  rules:
  - host: service1.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jaeger-service-1
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-service-2-ingress
  namespace: jaeger
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  ingressClassName: nginx
  rules:
  - host: service2.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jaeger-service-2
            port:
              number: 80